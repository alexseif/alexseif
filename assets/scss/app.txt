@use 'nav';

// @charset "UTF-8";
/*
The following content was designed & implemented under AlexSeif.com
*/
/*
    Created on : Sep 10, 2025, 11:10:24 AM
    Author     : Alex Seif <me@alexseif.com>
*/
@import url("https://cdnjs.cloudflare.com/ajax/libs/modern-normalize/1.1.0/modern-normalize.min.css");

:root {
  --pad: clamp(1rem, 5vw, 2rem);
}

// Debugging
// * {
// outline: 1px solid red;
// }
// üé® Color Tokens
$black: #121212;
$dark: #1a1a1a;
$light: #f8f9fa;
$muted: rgba(255, 255, 255, 0.6);

$accent-blue: #4f6fad; // Cyber-modern blue
$accent-hover: #6a8bd8;

$body-bg: $black;
$card-bg: $dark;
$card-text: $light;
$badge-bg: $black;
$badge-text: $light;

// üìê Layout Tokens
$max-width: 1200px;
$container-padding: clamp(1rem, 2vw, 2rem);
$badges-gap: 8px;
$page-gap: clamp(1rem, 3vw, 2rem);
$grid-gap: $page-gap;
$card-gap: clamp(0.5rem, 2vw, 1rem);
$radius: 0.75rem;
$badge-radius: 999px;

// üß± Container
.container {
  width: min(#{$max-width}, 100%);
  margin-inline: auto;
  padding-inline: $container-padding;
  box-sizing: border-box;

  >* {
    max-width: 100%;
    box-sizing: border-box;
  }
}

// üß± Fullpage Section
.fullpage {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: $page-gap;
  position: relative;
  background-color: $body-bg;
  color: $card-text;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

// üß≠ Scrollsign Cue
.scrollsign::after {
  content: '‚ï≤‚ï±';
  font-size: 2rem;
  color: $accent-blue;
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0.4;
  animation: bounce 1.2s ease-in-out infinite;
  pointer-events: none;
}

@keyframes bounce {

  0%,
  100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }
}

// üß± Section Header
.section header {
  text-align: center;
  max-width: 60ch;
  margin-inline: auto;
  margin-bottom: clamp(1rem, 3vw, 2rem);

  h2 {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    color: $accent-blue;
    margin-bottom: 0.5rem;
  }

  p {
    font-size: clamp(1rem, 2vw, 1.25rem);
    color: $muted;
  }
}

// üß± Grid Layouts (Mobile-first)
.grid-2,
.grid-3 {
  display: grid;
  gap: $grid-gap;
  margin-top: 2rem;
}

.grid-2 {
  grid-template-columns: 1fr;

  @media (min-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.grid-3 {
  grid-template-columns: 1fr;

  @media (min-width: 600px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: 960px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// üß± Card Component
.card {
  background-color: $card-bg;
  color: $card-text;
  padding: clamp(1rem, 5vw, 2rem);
  border-radius: $radius;
  box-shadow: 0 2px 8px rgba($body-bg, 0.6);
  display: flex;
  flex-direction: column;
  gap: $card-gap;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: lighten($card-bg, 5%);
  }

  .card-header {
    font-size: clamp(1.25rem, 3vw, 2rem);
    font-weight: bold;
    color: $accent-blue;
  }

  .card-body {
    font-size: clamp(1rem, 2vw, 1.25rem);
    color: $card-text;
  }

  .badge {
    background-color: $badge-bg;
    color: $badge-text;
    padding: 0.4rem 1rem;
    border-radius: $badge-radius;
    font-size: clamp(0.75rem, 1vw, 1rem);
    display: inline-block;
    align-self: flex-start;
    transition: background-color 0.3s ease;

    &:hover {
      background-color: $accent-blue;
      color: $body-bg;
    }
  }
}

// üè∑Ô∏è Badge Row (outside card)
.badge-row {
  display: flex;
  flex-wrap: wrap;
  gap: $badges-gap;
  margin-top: 1rem;
  // justify-content: center;
}

.badge {
  background: $badge-bg;
  padding: 6px 10px;
  border-radius: $badge-radius;
  font-size: 12px;
  color: $muted;
  display: inline-block;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: $accent-blue;
    color: $light;
  }
}

// üß≠ CTA Button
.cta {
  border: 2px solid $light;
  background-color: $light;
  color: $body-bg !important;
  font-weight: bolder;
  text-decoration: none;
  text-transform: capitalize;
  padding: 1vw 5vw;
  letter-spacing: 1px;
  cursor: pointer;
  box-shadow: inset 0 0 0 0 $light;
  transition: ease-out 0.6s;

  &:hover {
    background-color: $accent-blue;
    color: $light;
  }
}